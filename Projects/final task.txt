Задание для финального проекта.

Предметная область: приложение управления проектами (пример, Trello)

Общее:
- Java 8; ------------------------------------------------------------------------------------------------------------- ВЫПОЛНЕНО
- WebApp Server: Apache Tomcat 9;  ------------------------------------------------------------------------------------ ВЫПОЛНЕНО
- Docker; ------------------------------------------------------------------------------------------------------------- ВЫПОЛНЕНО
- Spring MVC приложение; ---------------------------------------------------------------------------------------------- ВЫПОЛНЕНО
- Для описания Spring-сущностей использовать Java и аннотационный подходы;  ------------------------------------------- ВЫПОЛНЕНО
- Разделение приложения на слои: модель бизнес-логики, слой DAO, слой сервисов, слой контроллеров;  ------------------- ВЫПОЛНЕНО
- База данных: H2 (in-memory или disk-based); ------------------------------------------------------------------------- ВЫПОЛНЕНО
- Аутентификация и права доступа на основе Spring Security; (+);  ----------------------------------------------------- ВЫПОЛНЕНО
- Слой отображения: JSP (базовое требование) или шаблонизаторы (+) Thymeleaf, Free-marker;  --------------------------- ВЫПОЛНЕНО
- Unit-тестирование бизнес-модели; ------------------------------------------------------------------------------------ ВЫПОЛНЕНО
- Разработать иерархию исключений; ------------------------------------------------------------------------------------ ВЫПОЛНЕНО
- Логгирование всех контроллер-событий; ------------------------------------------------------------------------------- ВЫПОЛНЕНО
- Интернационализация с помощью Spring: английский и русский языки; --------------------------------------------------- ВЫПОЛНЕНО

Функционал:
- Наличие двух ролей: администратор и обычный пользователь; ----------------------------------------------------------- ВЫПОЛНЕНО
- Вход в приложение только для зарегистрированного пользователя; ------------------------------------------------------ ВЫПОЛНЕНО

===============================================================================================================================================================
- Информация для регистрации: ФИО, дата рождения, логин, пароль, адрес электронной почты и //роль; -------------------- ВЫПОЛНЕНО
- Пользователю может быть добавлен аватар (+); --------------------------------------------------------------------- НЕ ВЫПОЛНЕНО

=====================================================================================================================================================================================
- Каждый пользователь имеет личную страницу, на которой выводится личная информация, список проектов и список заданий;- ВЫПОЛНЕНО

=========================================================================================================================================================================
- Роль администратора:
* Создание/модификация/удаление/окончание проекта и добавление в него пользователей;----------------------------------- ВЫПОЛНЕНО
* Создание/модификация/удаление заданий в рамках проекта и изменение их статусов; ------------------------------------- ВЫПОЛНЕНО
* Доступ к списку проектов со списком заданий; ------------------------------------------------------------------------ ВЫПОЛНЕНО
* Весь функционал обычного пользователя; ------------------------------------------------------------------------------ ВЫПОЛНЕНО

================================================================================================================================================================================
- Роль пользователя:
* Создание/изменение статуса задания в рамках проекта, в который есть доступ; ----------------------------------------- ВЫПОЛНЕНО
* Доступ может быть к нескольким проектам (выбор в выпадающем списке); ------------------------------------------------ ВЫПОЛНЕНО
* Пользователь должен видеть доску (таблицу) проекта с расставленными на ней заданиями в зависимости от статусов,
 Drag-n-Drop реализовывать не нужно (+); -------------------------------------------------------------------------   НЕ ВЫПОЛНЕНО
* На доску выводится только самая важная информация о задании: ID, название, исполнитель; ----------------------------- ВЫПОЛНЕНО
* Детальная информация о задании должна выводиться в отдельном окне, там же изменение статуса задания; ---------------- ВЫПОЛНЕНО
* Пользователь может назначить задание на любого иного пользователя из этого проекта; --------------------------------- ВЫПОЛНЕНО
* Пользователь может добавлять комментарий к заданию; ----------------------------------------------------------------- ВЫПОЛНЕНО
====================================================================================
user
 ФИО
дата рождения
логин 
пароль
адрес электронной почты
роль;

==================================================================================================================================================================================
- Проект состоит из:
* ID;
* title;
* Статус проекта: к исполнению / в работе / завершен;
* ID admin Идентификатор администратора, создавшего проект;

* Спикок заданий;
* Список пользователей;



====================================================================================================================
- Задание состоит из:
* ID;
* ID проекта;
* Название;
* Исполнитель;
* Дата начала;
* Дата окончания, добавляется автоматически при изменении статуса "Завершен"; ----------------------------------------- ВЫПОЛНЕНО
* Статус;

* Список комментариев к заданию;

=====================================================================================================================
- Окончание проекта ведет к удалению его из списка проектов, доступных пользователям; --------------------------------- ВЫПОЛНЕНО
- Статусы задания должны быть описаны с property-файле в виде массива; ------------------------------------------------ ВЫПОЛНЕНО
- Конфигурация подключения к БД описывается в property-файле; --------------------------------------------------------- ВЫПОЛНЕНО
- SQL-запросы должны быть вынесены в отдельный класс, либо в файл; ---------------------------------------------------- ВЫПОЛНЕНО
- Все литералы выносятся в файл констант; ----------------------------------------------------------------------------- ВЫПОЛНЕНО
- Упор делать не на UI, а на качестве Java-кода;
- Выполнение всех пунктов задания опционально, при сдаче проекта прикрепить данный файл с отметкой выполненных пунктов;

#############################     Работа приложения  ######################################################

Все действия которые заданы выполнены. 
Технологии: Spring MVC, Spring Security,
            Spring AOP, Spring DATA, Spring Test,
	    JUnit 5, AssertJ, Lombok, Docker(dockerfile-maven-plugin)
            Hibernate, Bootstrap, Thymeleaf,
            Embedded H2,  Embedded Tomcat -9,
	    Jackson,  mapStruct, Jquery(front side)
            (может что то и упустил)	
 Большинство запросов с View отправляется при помощи Ajax( не рефакторил js файл ) в виде Json объекта	
Не было указано про пользователей , поэтому пользователя нельзя удалить.
 Также создать пользователя можно только при помощи регистрации, удаление пользователя- пользователь не удаляется
из базы данных, а удаляется только из проекта становится как бы свободным. При удалении пользователя удаляеться и задача, 
которую он выполняет. При создании задачи обязательно назначается пользователь. При добавлении пользователя 
можно добавить только пользователя которого нету в проекте. 

Большой минус не реализован уровень Dto(не успеваю) , только валидация входных данных. Данные отдают практически всегда полностью.
 
  

